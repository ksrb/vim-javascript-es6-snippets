priority -10

### JavaScript snippets ###
snippet us "Use Strict" i
'use strict';
endsnippet

snippet ()  "lambda" i
($1) => {$0}
endsnippet

snippet log "console Log" i
console.log($1);$0
endsnippet

snippet im "IMport" b
import '${0}';
endsnippet

snippet imf "IMport From" b
import ${1} from '${0}';
endsnippet

### React snippets ###
snippet rt "create React component using file Template" b
'use strict';

import React from 'react';

class ${1:`!p snip.rv = snip.basename.title().replace('_', '')`} extends React.Component {

	constructor(props) {
		super(props);
	}

	render() {
		return (
			<div>
				$0
			</div>
		);
	}

}

export default $1;
endsnippet

snippet rc "create React Component" b
class ${1:Component} extends React.Component {

	constructor(props) {
		super(props);
	}

	render() {
		return (
			<div>
				$0
			</div>
		);
	}

}
endsnippet


snippet test "" b
`!p snip.rv = snip.basename.title()`
endsnippet

snippet cwm "Component Will Mount" b
componentWillMount() {
	${1}
}$0
endsnippet

snippet cdm "Component Did Mount" b
componentDidMount() {
	${1}
}$0
endsnippet

snippet cwrp "Component Will Receive Props" b
componentWillReceiveProps(nextProps) {
	${1}
}$0
endsnippet

snippet scu "Should Component Update" b
shouldComponentUpdate(nextProps, nextState) {
	${1}
}$0
endsnippet

snippet cwu "Component Will Update" b
componentWillUpdate(nextProps, nextState) {
	${1}
}$0
endsnippet

snippet cdu "Component Did Update" b
componentDidUpdate(prevProps, prevState) {
	${1}
}$0
endsnippet

snippet cwum "Component Will Unmount" b
componentWillUnmount() {
	${1}
}$0
endsnippet


snippet pt "propTypes" b
static propTypes = {
	${1}: PropTypes.${2:string}
};
endsnippet

snippet ren
render() {
	return (
		${1:<div />}
	);
}$0
endsnippet

snippet state "get state" i
this.state.${1}
endsnippet

snippet sst "set state" b
this.setState({
	${1}: ${2}
});$0
endsnippet

snippet ss "set state" b
this.setState($0);
endsnippet

snippet props "get property" i
this.props.${1}
endsnippet

snippet nbsp "Non break space" i
{'\u00a0'}
endsnippet
